/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wordle;

import java.awt.Color;
import javax.swing.JTextField;

/**
 *
 * @author adarb
 */
public class GUI_W extends javax.swing.JFrame {

    /**
     * Creates new form GUI_W
     */
    public Words word = new Words();
    public int guesses = 1;
    public String solution = "";
    private String playerGuess = "";
    private boolean valid = false;
    public char[] colors = {'w', 'w', 'w', 'w', 'w'};     // w = white, g = green, y = yellow
    private int[] solutionOccurrences = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
    private int[] guessOccurrences = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
    private int[] currOccurrences = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
    private char[] alphabet = {'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
                            'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
    private boolean y;
    
    public GUI_W() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        G22 = new javax.swing.JTextField();
        G14 = new javax.swing.JTextField();
        G15 = new javax.swing.JTextField();
        G21 = new javax.swing.JTextField();
        G23 = new javax.swing.JTextField();
        G24 = new javax.swing.JTextField();
        G25 = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        G31 = new javax.swing.JTextField();
        G32 = new javax.swing.JTextField();
        G33 = new javax.swing.JTextField();
        G34 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        G41 = new javax.swing.JTextField();
        G42 = new javax.swing.JTextField();
        G43 = new javax.swing.JTextField();
        G44 = new javax.swing.JTextField();
        G45 = new javax.swing.JTextField();
        G35 = new javax.swing.JTextField();
        G51 = new javax.swing.JTextField();
        G52 = new javax.swing.JTextField();
        G53 = new javax.swing.JTextField();
        G54 = new javax.swing.JTextField();
        G55 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        G61 = new javax.swing.JTextField();
        G62 = new javax.swing.JTextField();
        G63 = new javax.swing.JTextField();
        G64 = new javax.swing.JTextField();
        G65 = new javax.swing.JTextField();
        guessButton = new javax.swing.JButton();
        guessNumLabel = new javax.swing.JLabel();
        guessNumJTF = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        testWord = new javax.swing.JTextField();
        realAnswer = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        G13 = new javax.swing.JTextField();
        G12 = new javax.swing.JTextField();
        G11 = new javax.swing.JTextField();
        restartButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 0));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setForeground(new java.awt.Color(0, 153, 0));

        G22.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        G14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G14FocusGained(evt);
            }
        });

        G15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        G15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G15FocusGained(evt);
            }
        });

        G21.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G23.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G24.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G25.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        titleLabel.setBackground(new java.awt.Color(0, 153, 255));
        titleLabel.setForeground(new java.awt.Color(0, 0, 153));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("SFMTWordle!!!");
        titleLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        titleLabel.setOpaque(true);

        G31.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G32.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G33.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G34.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField13.setText("jTextField13");

        G41.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G42.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G43.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G44.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G45.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G35.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G51.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G52.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G53.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G54.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G55.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wordle/Robot.jpg"))); // NOI18N
        jLabel1.setToolTipText("");

        guessButton.setText("Enter Guess");
        guessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessButtonActionPerformed(evt);
            }
        });

        guessNumLabel.setText("Guess #");

        guessNumJTF.setText("1");

        startButton.setText("Start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButtonMouseClicked(evt);
            }
        });

        realAnswer.setText("answer");

        jLabel2.setText("Messages:");

        G13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        G11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        G11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G11FocusGained(evt);
            }
        });

        restartButton.setText("New Game");
        restartButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                restartButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(G21, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G31, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G41, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G51, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G61, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guessButton)
                            .addComponent(startButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(G11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(G62, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G52, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G42, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G22, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G12, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(G23, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G33, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G43, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G53, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G63, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(G13, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(G24, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G34, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(G44, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(G54, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(G64, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(G55, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G45, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(G35, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(G25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G65, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(G14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(G15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(guessNumJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(guessNumLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(testWord, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(restartButton)
                .addGap(47, 47, 47)
                .addComponent(realAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(startButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(G14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(G15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(G13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(G12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(G11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(G21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(G31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(G41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(G51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(G61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(guessButton)
                        .addGap(18, 18, 18)
                        .addComponent(guessNumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guessNumJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(testWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(realAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restartButton))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // player presses guess button to check their input results
    private void guessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessButtonActionPerformed
       
        resetColors();
        resetGuessOccur();
        resetCurrOccur();
        int guess = Integer.parseInt(guessNumJTF.getText());
        JTextField[] jtf1 = {G11, G12, G13, G14, G15};
        switch(guess) {
            case(1): 
                // build player guess word from Jtf input
                playerGuess = G11.getText() + G12.getText() + G13.getText() + G14.getText() + G15.getText();
                // get the occurrences of each letter for the guess
                valid = word.isWord(playerGuess);
                setGreen(playerGuess, solution);        // we are working here and setting colors properly
                setYellow(playerGuess, solution);       // everything looks to be working here for yellows
                if(valid == false){
                    testWord.setText("Not in word list");
                    break;
                }
                    
                // set blocks to green of correct letters and yellow for correct but wrong position
                for(int i = 0; i < colors.length; i++){
                    if(colors[i] == 'g'){
                        jtf1[i].setBackground(Color.green);
                    } 
                    else if(colors[i]== 'y'){
                        jtf1[i].setBackground(Color.YELLOW);
                    }
                }
                                
                if(playerGuess.equals(solution)){
                    testWord.setText("You Win!!!!!");
                }
                
                disableJTF(jtf1);
                break;
               
            case(2): 
                resetColors();
                resetGuessOccur();
                resetCurrOccur();
                JTextField[] jtf2 = {G21, G22, G23, G24, G25};
                playerGuess = G21.getText() + G22.getText() + G23.getText() + G24.getText() + G25.getText();
                valid = word.isWord(playerGuess);
                setGreen(playerGuess, solution);
                setYellow(playerGuess, solution);       // everything looks to be working here for yellows
                   if(valid == false){
                    testWord.setText("Not in word list");
                    break;
                }
                for(int i = 0;i < colors.length; i++){
                    if(colors[i] == 'g'){
                        jtf2[i].setBackground(Color.green);
                    }
                          else if(colors[i]== 'y'){
                        jtf2[i].setBackground(Color.YELLOW);
                    }
                }
                   
                
                if(playerGuess.equals(solution)){
                    testWord.setText("You Win!!!!!");
                }
                
                disableJTF(jtf2);
                break;
                
            case(3): 
                resetColors();
                resetGuessOccur();
                resetCurrOccur();
                JTextField[] jtf3 = {G31, G32, G33, G34, G35};
                playerGuess = G31.getText() + G32.getText() + G33.getText() + G34.getText() + G35.getText();
                valid = word.isWord(playerGuess);
                setGreen(playerGuess, solution);
                setYellow(playerGuess, solution);      
                   if(valid == false){
                    testWord.setText("Not in word list");
                    break;
                }
                
                // set block color to green or yellow as needed
                for(int i = 0;i < colors.length; i++){
                    if(colors[i] == 'g'){
                        jtf3[i].setBackground(Color.green);
                    }
                    else if(colors[i]== 'y'){
                        jtf3[i].setBackground(Color.YELLOW);
                    }
                }
                            
                if(playerGuess.equals(solution)){
                    testWord.setText("You Win!!!!!");
                }
                
                disableJTF(jtf3);
                break
                        ;
            case(4): 
                resetColors();
                resetGuessOccur();
                resetCurrOccur();
                JTextField[] jtf4 = {G41, G42, G43, G44, G45};
                playerGuess = G41.getText() + G42.getText() + G43.getText() + G44.getText() + G45.getText();
                valid = word.isWord(playerGuess);
                setGreen(playerGuess, solution);
                setYellow(playerGuess, solution);       
                   if(valid == false){
                    testWord.setText("Not in word list");
                    break;
                }
                for(int i = 0;i < colors.length; i++){
                    if(colors[i] == 'g'){
                        jtf4[i].setBackground(Color.green);
                    }
                    else if(colors[i]== 'y'){
                        jtf4[i].setBackground(Color.YELLOW);
                    }
                }
                   
        
                if(playerGuess.equals(solution)){
                    testWord.setText("You Win!!!!!");
                }
                
                disableJTF(jtf4);
                break;
        
            case(5): 
                resetColors();
                resetGuessOccur();
                resetCurrOccur();
                JTextField[] jtf5 = {G51, G52, G53, G54, G55};
                playerGuess = G51.getText() + G52.getText() + G53.getText() + G54.getText() + G55.getText();
                valid = word.isWord(playerGuess);
                setGreen(playerGuess, solution);
                setYellow(playerGuess, solution);      
                   if(valid == false){
                    testWord.setText("Not in word list");
                    break;
                }
                for(int i = 0;i < colors.length; i++){
                    if(colors[i] == 'g'){
                        jtf5[i].setBackground(Color.green);
                    }      
                    else if(colors[i]== 'y'){
                        jtf5[i].setBackground(Color.YELLOW);
                    }
                    
                }
                

                if(playerGuess.equals(solution)){
                    testWord.setText("You Win!!!!!");
                }
                   
                disableJTF(jtf5);
                break;
                
            case(6): 
                resetColors();
                resetGuessOccur();
                resetCurrOccur();
                JTextField[] jtf6 = {G61, G62, G63, G64, G65};
                playerGuess = G61.getText() + G62.getText() + G63.getText() + G64.getText() + G65.getText();
                valid = word.isWord(playerGuess);
                setGreen(playerGuess, solution);
                setYellow(playerGuess, solution);      
                   if(valid == false){
                    testWord.setText("Not in word list");
                    break;
                }
                for(int i = 0;i < colors.length; i++){
                    if(colors[i] == 'g'){
                        jtf6[i].setBackground(Color.green);
                    }      
                    else if(colors[i]== 'y'){
                        jtf1[i].setBackground(Color.YELLOW);
                    }
                }
                

                
                if(playerGuess.equals(solution)){
                    testWord.setText("You Win!!!!!");
                }
                   
                disableJTF(jtf6);
                break;
        }
        
        // if guess is in valid word list
        if(valid == true && guess < 6){
            guess++;
             guessNumJTF.setText(Integer.toString(guess));
        }
        // else tell user not valid (have text box that is invisible but pops viisible 
        
        // switch statements for guess #1-5, this determines which row of letters to test
    }//GEN-LAST:event_guessButtonActionPerformed

// start button is pressed to start new round 
    private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
         
        
       solution = word.getWord(realAnswer);           // get the solution word
       // get the occurrences of each letter for the solution
       for(int i = 0; i < solution.length(); i++){
           getOccurrences(solution.charAt(i),solutionOccurrences, alphabet);
       }
       for (int num : solutionOccurrences) {
            System.out.print(num + ", ");
        }
       System.out.println("");
       //testWord.setText(solution);      
       
    }//GEN-LAST:event_startButtonMouseClicked

    // gets number of occurrences of a character in solution  -- WORKS
    public static void getOccurrences(char c, int[] occur, char[] alpha){
        for(int j = 0; j < occur.length; j++){
            if(c == alpha[j]){
               occur[j]++;
            }
        }
    } // end method getSolutionOccurrences
    
    // method sets blocks green as needed
    public void setGreen(String playerGuess, String solution){
           for (int i = 0; i < playerGuess.length(); i++) {
            if (playerGuess.charAt(i) == solution.charAt(i)) {
                colors[i] = 'g';
            }
        }
    }
    
    // resets color array to all white
    public void resetColors(){
     for(int i = 0; i < 5; i++){
         colors[i] = 'w';
     }
    }
    
    // resets GuessOccur array to all 0's
    public void resetGuessOccur(){
        for(int i = 0; i < 26; i++){
            guessOccurrences[i] = 0;
        }         
    }
    
    // resets Current Occurences array to all 0's
    public void resetCurrOccur(){
        for(int i = 0; i < 26; i++){
            currOccurrences[i] = 0;
        }        
    }
    
    // method determines if letter in guess should be marked yellow
    public void setYellow(String playerGuess, String solution){
        // check for yellow spots  working now for singles
        for (int j = 0; j < playerGuess.length(); j++) {
            for (int m = 0; m < playerGuess.length(); m++) {

                if (playerGuess.charAt(m) == solution.charAt(j) && colors[j] != 'g') {
                    y = validYellow(playerGuess.charAt(m), alphabet, currOccurrences, solutionOccurrences);
                    if(y){
                        colors[m] = 'y';
                    }
                }
            } // inner for loop
        }   // outer for loop
    }
    
    // method called from setYellow method, determines if this is a valid yellow occurrence, 
    // meaning, if there are more than one occurrences of a letter detected, is it valid, or already accounted for
    public static boolean validYellow(char currChar, char[] alpha, int[] currOccurrences, int[] solutionOccurrences){
        boolean yellow = false;
        for(int i = 0; i < alpha.length; i++){
            // if will increment the number of that letter in the current occurrences array
            if(currChar == alpha[i] ) {
                currOccurrences[i]++;
                // if the # of occurrences is greater than the number in the solution, and the letter exists
                // in the solution, then the letter should be yellow, else it is white
                if (currOccurrences[i] <= solutionOccurrences[i] && solutionOccurrences[i] > 0) {
                    yellow = true;
                    return yellow;
                } // inner for
            } // outer for
        } // end for loop
        return yellow;
    }
    
    // locks JTextField for previous guess
    public void disableJTF(JTextField[] jtf){
        for(int i = 0; i < 5; i++){
            jtf[i].setEnabled(false);
        }
    }
  
    
    private void G14FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G14FocusGained
        G14.setText("");
    }//GEN-LAST:event_G14FocusGained

    private void G15FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G15FocusGained
        G15.setText("");
    }//GEN-LAST:event_G15FocusGained

    private void G11FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G11FocusGained
        G11.setText("");
    }//GEN-LAST:event_G11FocusGained

    
    // this will reset status of all text boxes to initial state and begin new round
    private void restartButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restartButtonMouseClicked
        JTextField[] jtf1 = {G11, G12, G13, G14, G15};
        JTextField[] jtf2 = {G21, G22, G23, G24, G22};
        JTextField[] jtf3 = {G31, G32, G33, G34, G35};
        JTextField[] jtf4 = {G41, G42, G43, G44, G45};
        JTextField[] jtf5 = {G51, G52, G53, G54, G55};
        JTextField[] jtf6 = {G61, G62, G63, G64, G65};
        
        for(JTextField jtf : jtf1){
            jtf.setText("");
        }
        for(JTextField jtf : jtf2){
            jtf.setText("");
        }
        for(JTextField jtf : jtf3){
            jtf.setText("");
        }
        for(JTextField jtf : jtf4){
            jtf.setText("");
        }
        for(JTextField jtf : jtf5){
            jtf.setText("");
        }
        for(JTextField jtf : jtf6){
            jtf.setText("");
        }
        
        resetColors();
        startButtonMouseClicked(evt);
    }//GEN-LAST:event_restartButtonMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_W.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_W.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_W.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_W.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_W().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField G11;
    public javax.swing.JTextField G12;
    public javax.swing.JTextField G13;
    public javax.swing.JTextField G14;
    public javax.swing.JTextField G15;
    public javax.swing.JTextField G21;
    public javax.swing.JTextField G22;
    public javax.swing.JTextField G23;
    public javax.swing.JTextField G24;
    public javax.swing.JTextField G25;
    public javax.swing.JTextField G31;
    private javax.swing.JTextField G32;
    private javax.swing.JTextField G33;
    private javax.swing.JTextField G34;
    private javax.swing.JTextField G35;
    private javax.swing.JTextField G41;
    private javax.swing.JTextField G42;
    private javax.swing.JTextField G43;
    private javax.swing.JTextField G44;
    private javax.swing.JTextField G45;
    private javax.swing.JTextField G51;
    private javax.swing.JTextField G52;
    private javax.swing.JTextField G53;
    private javax.swing.JTextField G54;
    private javax.swing.JTextField G55;
    private javax.swing.JTextField G61;
    private javax.swing.JTextField G62;
    private javax.swing.JTextField G63;
    private javax.swing.JTextField G64;
    private javax.swing.JTextField G65;
    public javax.swing.JButton guessButton;
    public javax.swing.JTextField guessNumJTF;
    public javax.swing.JLabel guessNumLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField13;
    public javax.swing.JTextField realAnswer;
    public javax.swing.JButton restartButton;
    public javax.swing.JButton startButton;
    public javax.swing.JTextField testWord;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
